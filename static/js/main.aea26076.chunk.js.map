{"version":3,"sources":["assets/arrow-play-logo-vector_23987-136.webp","components/Header/Header.jsx","assets/footer-bg.jpg","components/Footer/Footer.jsx","api/apiConfig.js","api/axiosClient.js","api/tmdbApi.js","components/Button/Button.jsx","components/Modal/Modal.jsx","components/HeroSlide/Hero-Slide.jsx","components/Movie-card/MovieCard.jsx","components/Movie-list/MovieList.jsx","pages/Home.jsx","components/Page-header/PageHeader.jsx","components/Input/Input.jsx","components/Movie-grid/MovieGrid.jsx","pages/Catalog.jsx","pages/Detail/CastList.jsx","pages/Detail/VideoList.jsx","pages/Detail/Detail.jsx","Config/Routes.jsx","App.js","index.js"],"names":["headerNavigation","display","path","Header","props","pathname","useLocation","headerRef","useRef","active","findIndex","item","useEffect","shrinkHeader","document","body","scrollTop","documentElement","current","classList","add","remove","window","addEventListener","removeEventListener","className","ref","src","logo","alt","to","map","index","Footer","style","backgroundImage","bg","apiConfig","baseUrl","apiKey","originalImage","imgPath","w500Image","axiosClient","axios","create","baseURL","headers","paramsSerializer","params","queryString","stringify","api_key","interceptors","request","use","config","response","data","error","category","movie","tv","movieType","upcoming","popular","top_rated","tvType","on_the_air","tmdbApi","getMoviesList","type","url","get","getTvList","getVideos","cate","id","search","detail","credits","similar","Button","onClick","children","OutlineButton","ModalContent","contentRef","parentNode","onClose","prototype","PropTypes","func","Modal","useState","setActive","HeroSlideItem","history","useHistory","background","backdrop_path","poster_path","setModalActive","modal","querySelector","video","console","log","results","length","videoSrc","key","setAttribute","innerHTML","toggle","title","overview","push","TrailerModal","iframeRef","width","height","HeroSlide","SwiperCore","Autoplay","movieItems","setMovieItems","getMovies","page","slice","modules","grabCursor","spaceBetween","slidesPerView","isActive","MovieCard","link","name","MovieList","items","setItems","getList","Home","PageHeader","Input","placeholder","value","onChange","e","MovieSearch","keyword","setKeyword","goToSearch","useCallback","trim","enterEvent","preventDefault","keyCode","target","MovieGrid","setPage","totalPage","setTotalPage","useParams","undefined","query","total_pages","loadMore","Catalog","CastList","cats","setCats","getCredits","cast","profile_path","Video","offsetWidth","VideoList","videos","setVideos","Detail","setItem","getDetail","scrollTo","genres","genre","Routes","component","exact","App","render","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.aea26076.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/arrow-play-logo-vector_23987-136.0f3b7f92.webp\";","import React, { useRef, useEffect } from 'react'\r\nimport './Header.scss';\r\nimport logo from '../../assets/arrow-play-logo-vector_23987-136.webp'\r\nimport { Link, useLocation } from 'react-router-dom';\r\nconst headerNavigation = [\r\n   {\r\n      display: 'Home',\r\n      path: '/'\r\n   },\r\n   {\r\n      display: 'Movies',\r\n      path: '/movie',\r\n   },\r\n   {\r\n      display: 'TV Series',\r\n      path: '/tv',\r\n   }\r\n]\r\n\r\nconst Header = (props) => {\r\n   const { pathname } = useLocation();\r\n   const headerRef = useRef(null)\r\n   const active  = headerNavigation.findIndex(item => item.path === pathname);\r\n\r\n\r\n   useEffect(() => {\r\n      const shrinkHeader = () => {\r\n         if(document.body.scrollTop > 100 || document.documentElement.scrollTop > 100) {\r\n            headerRef.current.classList.add('shrink');\r\n         }\r\n         else {\r\n            headerRef.current.classList.remove('shrink');\r\n         }\r\n      }\r\n      window.addEventListener('scroll', shrinkHeader);\r\n      return () => {\r\n         window.removeEventListener('scroll', shrinkHeader);\r\n      }\r\n   }, [])\r\n\r\n\r\n   return (\r\n      <div className='header' ref={headerRef}>\r\n         <div className=\"header__wrap container\">\r\n            <div className=\"logo\">\r\n               <img src={logo} alt=\"\" />\r\n               <Link to='/'>NozeMovie</Link>\r\n            </div>\r\n            <ul className=\"header__navigation\">\r\n               {\r\n                  headerNavigation.map((item, index) => (\r\n                     <li key={index} className={`${index === active ? 'active' : ''}`}>\r\n                        <Link to={item.path}>\r\n                           {item.display}\r\n                        </Link>\r\n                     </li>\r\n                  ))\r\n               }\r\n            </ul>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Header","export default __webpack_public_path__ + \"static/media/footer-bg.67e95f05.jpg\";","import React from 'react'\r\nimport './Footer.scss'\r\nimport { Link } from 'react-router-dom'\r\nimport bg from '../../assets/footer-bg.jpg'\r\nimport logo from './../../assets/arrow-play-logo-vector_23987-136.webp'\r\nconst Footer = () => {\r\n   return (\r\n      <div className='footer' style={{ backgroundImage: `url(${bg})` }}>\r\n         <div className=\"footer__content container\">\r\n            <div className=\"footer__content__logo\">\r\n               <img src={logo} alt=\"logo\" />\r\n               <Link to='/'>NozeMovie</Link>\r\n            </div>\r\n            <div className=\"footer__content__menus\">\r\n               <div className=\"footer__content__menus__menu\">\r\n                  <Link to='/'>Home</Link>\r\n                  <Link to='/'>Contact us</Link>\r\n                  <Link to='/'>Term of services</Link>\r\n                  <Link to='/'>About us</Link>\r\n               </div>\r\n               <div className=\"footer__content__menus__menu\">\r\n                  <Link to='/'>Live</Link>\r\n                  <Link to='/'>FAG</Link>\r\n                  <Link to='/'>Premium</Link>\r\n                  <Link to='/'>Privacy policy</Link>\r\n               </div>\r\n               <div className=\"footer__content__menus__menu\">\r\n                  <Link to='/'>You must watch</Link>\r\n                  <Link to='/'>Recent release</Link>\r\n                  <Link to='/'>Top IMDB</Link>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Footer","const apiConfig = {\r\n   baseUrl: 'https://api.themoviedb.org/3/',\r\n   apiKey: '8259ce507dbc43d7f6de71ec8d3b28bf',\r\n   originalImage: (imgPath) => `https://image.tmdb.org/t/p/original/${imgPath}`,\r\n   w500Image: (imgPath) => `https://image.tmdb.org/t/p/w500/${imgPath}`\r\n}\r\n\r\nexport default apiConfig;\r\n","import axios from \"axios\";\r\nimport queryString from \"query-string\";\r\nimport apiConfig from \"./apiConfig\";\r\n\r\nconst axiosClient = axios.create({\r\n   baseURL: apiConfig.baseUrl,\r\n   headers: {\r\n      'Content-Type': 'application/json',\r\n   },\r\n   paramsSerializer: params => queryString.stringify({...params, api_key: apiConfig.apiKey}),\r\n})\r\n\r\naxiosClient.interceptors.request.use(async (config) => config);\r\naxiosClient.interceptors.request.use((response) => {\r\n   if(response && response.data) {\r\n      return response.data;\r\n   }\r\n   return response;\r\n}, (error) => {\r\n   throw error;\r\n})\r\n\r\nexport default axiosClient;","import axiosClient from \"./axiosClient\";\r\n\r\nexport const category = {\r\n   movie: 'movie',\r\n   tv: 'tv'\r\n}\r\n\r\nexport const movieType = {\r\n   upcoming: 'upcoming',\r\n   popular: 'popular',\r\n   top_rated: 'top_rated'\r\n}\r\n\r\nexport const tvType = {\r\n   popular: 'popular',\r\n   top_rated: 'top_rated',\r\n   on_the_air: 'on_the_air'\r\n}\r\n\r\nconst tmdbApi = {\r\n   getMoviesList: (type, params) => {\r\n      const url = 'movie/' + movieType[type];\r\n      return axiosClient.get(url, params);\r\n   },\r\n   getTvList: (type, params) => {\r\n      const url = 'tv/' + tvType[type];\r\n      return axiosClient.get(url, params);\r\n   },\r\n   getVideos: (cate, id) => {\r\n      const url = category[cate] + '/' + id + '/videos';\r\n      return axiosClient.get(url, { params: {} });\r\n   },\r\n   search: (cate, params) => {\r\n      const url = 'search/' + category[cate];\r\n      return axiosClient.get(url, params);\r\n   },\r\n   detail: (cate, id, params) => {\r\n      const url = category[cate] + '/' + id;\r\n      return axiosClient.get(url, params);\r\n   },\r\n   credits: (cate, id) => {\r\n      const url = category[cate] + '/' + id + '/credits';\r\n      return axiosClient.get(url, { params: {} });\r\n   },\r\n   similar: (cate, id) => {\r\n      const url = category[cate] + '/' + id + '/similar';\r\n      return axiosClient.get(url, { params: {} });\r\n   },\r\n}\r\n\r\nexport default tmdbApi;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Button.scss'\r\nconst Button = props => {\r\n   return (\r\n      <button\r\n         className={`btn ${props.className}`}\r\n         onClick={props.onClick ? () => props.onClick(): null}\r\n      >\r\n         {props.children}\r\n      </button>\r\n   )\r\n}\r\n\r\n\r\nexport const OutlineButton = props => {\r\n   return (\r\n      <Button \r\n         className={`btn-outline ${props.className}`}\r\n         onClick={props.onClick ? () => props.onClick(): null}\r\n      >\r\n         {props.children}\r\n      </Button>\r\n   )\r\n}\r\n \r\nButton.propTypes = {\r\n   onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button","import React, { useState, useEffect, useRef } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Modal.scss'\r\nconst Modal = props => {\r\n   const [active, setActive] = useState(false);\r\n   useEffect(() => {\r\n      setActive(props.active)\r\n   }, [props.active])\r\n   return (\r\n      <div id={props.id} className={`modal ${active ? 'active' : ''}`}>\r\n         {props.children}\r\n      </div>\r\n   )\r\n}\r\n\r\nModal.propTypes = {\r\n   active: PropTypes.bool,\r\n   id: PropTypes.string,\r\n}\r\n\r\nexport const ModalContent = props => {\r\n   const contentRef = useRef(null);\r\n   const closeModal = () => {\r\n      contentRef.current.parentNode.classList.remove('active');\r\n      if (props.onClose) {\r\n         props.onClose();\r\n      }\r\n   }\r\n   return (\r\n      <div ref={contentRef} className=\"modal__content\">\r\n         {props.children}\r\n         <div className=\"modal__content__close\" onClick={closeModal}>\r\n            <i className='bx bx-x'></i>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nModalContent.prototype = {\r\n   onClose: PropTypes.func,\r\n}\r\n\r\nexport default Modal","import React, { useState, useEffect, useRef } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Hero-Slide.scss'\r\nimport tmdbApi, { category, movieType } from '../../api/tmdbApi';\r\nimport apiConfig from '../../api/apiConfig';\r\nimport SwiperCore, { Autoplay } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Button, { OutlineButton } from '../Button/Button';\r\nimport Modal, { ModalContent } from '../Modal/Modal';\r\nconst HeroSlide = props => {\r\n   SwiperCore.use([Autoplay]);\r\n   const [movieItems, setMovieItems] = useState([])\r\n\r\n   useEffect(() => {\r\n      const getMovies = async () => {\r\n         const params = { page: 1 };\r\n         try {\r\n            const response = await tmdbApi.getMoviesList(movieType.popular, { params });\r\n            setMovieItems(response.data.results.slice(0, 4))\r\n         }\r\n         catch (err) {\r\n            console.log(err);\r\n         }\r\n      }\r\n      getMovies();\r\n   }, [])\r\n\r\n   return (\r\n      <div className='hero-slide'>\r\n         <Swiper\r\n            modules={[Autoplay]}\r\n            grabCursor={true}\r\n            spaceBetween={0}\r\n            slidesPerView={1}\r\n         >\r\n            {\r\n               movieItems.map((movie, index) => (\r\n                  <SwiperSlide key={index}>\r\n                     {({ isActive }) => (\r\n                        <HeroSlideItem\r\n                           item={movie}\r\n                           className={`${isActive ? 'active' : ''}`}\r\n                        />\r\n                     )}\r\n                  </SwiperSlide>\r\n               ))\r\n            }\r\n         </Swiper>\r\n         {\r\n            movieItems.map((movie, index) => (<TrailerModal key={index} item={movie} />))\r\n         }\r\n      </div>\r\n   )\r\n}\r\n\r\nHeroSlide.propTypes = {}\r\n\r\n\r\n\r\nconst HeroSlideItem = (props) => {\r\n   let history = useHistory();\r\n   let item = props.item;\r\n   const background = apiConfig.originalImage(item.backdrop_path ? item.backdrop_path : item.poster_path);\r\n\r\n   const setModalActive = async() => {\r\n      const modal = document.querySelector('#modal_' + item.id);\r\n      const video = await tmdbApi.getVideos(category.movie, item.id);\r\n      console.log(video);\r\n      if(video.data.results.length > 0) {\r\n         const videoSrc = 'http://www.youtube.com/embed/' + video.data.results[0].key;\r\n         modal.querySelector('.modal__content > iframe').setAttribute('src', videoSrc);\r\n      }\r\n      else {\r\n         modal.querySelector('.modal__content > iframe').innerHTML = 'No trailer available';\r\n      }\r\n\r\n      modal.classList.toggle('active');\r\n   }\r\n\r\n   return (\r\n      <div\r\n         className={`hero-slide__item ${props.className}`}\r\n         style={{ backgroundImage: `url(${background})` }}\r\n      >\r\n         <div className=\"hero-slide__item__content cointainer\">\r\n            <div className=\"hero-slide__item__content__info\">\r\n               <h2 className=\"title\">{item.title}</h2>\r\n               <div className=\"overview\">{item.overview}</div>\r\n               <div className=\"btns\">\r\n                  <Button\r\n                     onClick={() => history.push('/movie/' + item.id)}\r\n                  >\r\n                     Watch now\r\n                  </Button>\r\n                  <OutlineButton\r\n                     onClick={setModalActive}\r\n                  >\r\n                     Watch trailer\r\n                  </OutlineButton>\r\n               </div>\r\n            </div>\r\n            <div className=\"hero-slide__item__content__poster\">\r\n               <img src={apiConfig.w500Image(item.poster_path)} alt=\"\" />\r\n            </div>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nconst TrailerModal = (props) => {\r\n   const item = props.item;\r\n   const iframeRef = useRef(null);\r\n   const onClose = () => iframeRef.current.setAttribute('src', '');\r\n   return (\r\n      <Modal active={false} id={`modal_${item.id}`}>\r\n         <ModalContent onClose={onClose}>\r\n            <iframe\r\n               ref={iframeRef}\r\n               width=\"100%\"\r\n               height=\"500px\"\r\n               title=\"trailer\"\r\n            />\r\n         </ModalContent>\r\n      </Modal>\r\n   )\r\n}\r\n\r\nexport default HeroSlide","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './MovieCard.scss'\r\nimport { Link } from 'react-router-dom'\r\nimport Button from '../Button/Button'\r\nimport apiConfig from '../../api/apiConfig'\r\nimport { category, movieType, tvType } from '../../api/tmdbApi'\r\nconst MovieCard = props => {\r\n   const item = props.item;\r\n   const link = '/' + category[props.category] + '/' + item.id;\r\n   const bg = apiConfig.w500Image(item.poster_path);\r\n   return (\r\n      <Link to={link}>\r\n         <div className=\"movie-card\" style={{ backgroundImage: `url(${bg})` }}>\r\n            <Button>\r\n               <i className='bx bx-play'></i>\r\n            </Button>\r\n         </div>\r\n         <h3>{item.title || item.name}</h3>\r\n      </Link>\r\n   )\r\n}\r\n\r\nMovieCard.propTypes = {}\r\n\r\nexport default MovieCard","import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from '../Button/Button';\r\nimport tmdbApi, { category } from '../../api/tmdbApi';\r\nimport apiConfig from '../../api/apiConfig';\r\nimport './MovieList.scss'\r\nimport MovieCard from '../Movie-card/MovieCard';\r\nconst MovieList = props => {\r\n   const [items, setItems] = useState([]);\r\n\r\n   useEffect(() => {\r\n      const getList = async() => {\r\n         let response  = null;\r\n         const params = {};\r\n\r\n         if(props.type !== 'similar') {\r\n            switch(props.type) {\r\n               case category.movie: \r\n                  response = await tmdbApi.getMoviesList(props.type, {params})\r\n                  break;\r\n               default  : \r\n                  response = await tmdbApi.getTvList(props.type, {params})\r\n            }\r\n         }\r\n         else {\r\n            response = await tmdbApi.similar(props.category, props.id)\r\n         }\r\n         setItems(response.data.results);\r\n      }\r\n      getList();\r\n   }, [])\r\n   return (\r\n      <div className='movie-list'>\r\n         <Swiper\r\n            grabCursor={true}\r\n            spaceBetween={10}\r\n            slidesPerView={'auto'}\r\n         >\r\n            {\r\n               items.map((item, index) => (\r\n                  <SwiperSlide key={index}>\r\n                     <MovieCard category={props.category} item={item} />\r\n                  </SwiperSlide>\r\n               ))\r\n            }\r\n         </Swiper>\r\n      </div>\r\n   )\r\n}\r\n\r\nMovieList.propTypes = {\r\n   category: PropTypes.string.isRequired,\r\n   type: PropTypes.string.isRequired\r\n}\r\n\r\nexport default MovieList","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport HeroSlide from '../components/HeroSlide/Hero-Slide'\r\nimport { OutlineButton } from '../components/Button/Button'\r\nimport { Link } from 'react-router-dom'\r\nimport MovieList from '../components/Movie-list/MovieList'\r\nimport { category, movieType, tvType } from '../api/tmdbApi'\r\nconst Home = props => {\r\n  return (\r\n    <>\r\n      <HeroSlide />\r\n      <div className=\"container\">\r\n        <div className=\"section mb-3\">\r\n          <div className=\"section__header mb-2\">\r\n            <h2>Trending Movies</h2>\r\n            <Link to='/movie'>\r\n              <OutlineButton className='small'>View more</OutlineButton>\r\n            </Link>\r\n          </div>\r\n          <MovieList category={category.movie} type={movieType.popular} />\r\n        </div>\r\n\r\n        <div className=\"section mb-3\">\r\n          <div className=\"section__header mb-2\">\r\n            <h2>Top Rated Movies</h2>\r\n            <Link to='/movie'>\r\n              <OutlineButton className='small'>View more</OutlineButton>\r\n            </Link>\r\n          </div>\r\n          <MovieList category={category.movie} type={movieType.top_rated} />\r\n        </div>\r\n\r\n        <div className=\"section mb-3\">\r\n          <div className=\"section__header mb-2\">\r\n            <h2>Trending TV</h2>\r\n            <Link to='/tv'>\r\n              <OutlineButton className='small'>View more</OutlineButton>\r\n            </Link>\r\n          </div>\r\n          <MovieList category={category.tv} type={tvType.popular} />\r\n        </div>\r\n\r\n        <div className=\"section mb-3\">\r\n          <div className=\"section__header mb-2\">\r\n            <h2>Top Rated TV</h2>\r\n            <Link to='/movie'>\r\n              <OutlineButton className='small'>View more</OutlineButton>\r\n            </Link>\r\n          </div>\r\n          <MovieList category={category.tv} type={tvType.top_rated} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nHome.propTypes = {}\r\n\r\nexport default Home","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './PageHeader.scss'\r\nimport bg from '../../assets/footer-bg.jpg'\r\nconst PageHeader = props => {\r\n   return (\r\n      <div className='page-header' style={{ backgroundImage: `url(${bg})`}}>\r\n         <h2>{props.children}</h2>\r\n      </div>\r\n   )\r\n}\r\n\r\nPageHeader.propTypes = {}\r\n\r\nexport default PageHeader","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Input.scss'\r\nconst Input = props => {\r\n   return (\r\n      <input\r\n         type={props.type}\r\n         placeholder={props.placeholder}\r\n         value={props.value}\r\n         onChange={props.onChange ? (e) => props.onChange(e) : null}\r\n      />\r\n   )\r\n}\r\n\r\nInput.propTypes = {}\r\n\r\nexport default Input","import React, { useState, useEffect, useCallback } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './MovieGrid.scss'\r\nimport MovieCard from '../Movie-card/MovieCard'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport Input from '../Input/Input';\r\nimport tmdbApi, { category, movieType, tvType } from '../../api/tmdbApi'\r\nimport Button, { OutlineButton } from '../Button/Button';\r\nconst MovieGrid = props => {\r\n   const [items, setItems] = useState([]);\r\n   const [page, setPage] = useState(1);\r\n   const [totalPage, setTotalPage] = useState(0);\r\n   const { keyword } = useParams();\r\n   \r\n   useEffect(() => {\r\n      const getList = async () => {\r\n         try {\r\n            let response = null;\r\n            if (keyword === undefined) {\r\n               const params = {};\r\n               switch (props.category) {\r\n                  case category.movie:\r\n                     response = await tmdbApi.getMoviesList(movieType.upcoming, { params });\r\n                     break;\r\n                  default:\r\n                     response = await tmdbApi.getTvList(tvType.popular, { params });\r\n               }\r\n            }\r\n            else {\r\n               const params = { query: keyword };\r\n               response = await tmdbApi.search(props.category, { params });\r\n            }\r\n            setItems(response.data.results);\r\n            setTotalPage(response.data.total_pages);\r\n         }\r\n         catch (err) {\r\n            console.log(err);\r\n         }\r\n      }\r\n      getList();\r\n      return () => {\r\n\r\n      }\r\n   }, [props.category, keyword]);\r\n\r\n   const loadMore = async () => {\r\n      let response = null;\r\n      if (keyword === undefined) {\r\n         const params = { page: page + 1 };\r\n         switch (props.category) {\r\n            case category.movie:\r\n               response = await tmdbApi.getMoviesList(movieType.upcoming, { params });\r\n               break;\r\n            default:\r\n               response = await tmdbApi.getTvList(tvType.popular, { params });\r\n         }\r\n      }\r\n      else {\r\n         const params = { page: page + 1, query: keyword };\r\n         response = await tmdbApi.search(props.category, { params });\r\n      }\r\n      setItems([...items, ...response.data.results]);\r\n      setPage(page + 1);\r\n   }\r\n   return (\r\n      <>\r\n         <div className=\"section mb-3\">\r\n            <MovieSearch category={props.category} keyword={keyword} />\r\n         </div>\r\n         <div className='movie-grid'>\r\n            {\r\n               items.map((item, index) => (\r\n                  <MovieCard key={index} item={item} category={props.category} />\r\n               ))\r\n            }\r\n         </div>\r\n         {\r\n            page < totalPage ? (\r\n               <div className=\"movie-grid__loadmore\">\r\n                  <OutlineButton className='small' onClick={loadMore}>Load more</OutlineButton>\r\n               </div>\r\n            ) : null\r\n         }\r\n      </>\r\n   )\r\n}\r\n\r\n\r\nconst MovieSearch = (props) => {\r\n   const history = useHistory();\r\n   const [keyword, setKeyword] = useState(props.keyword ? props.keyword : '');\r\n   const goToSearch = useCallback(\r\n      () => {\r\n         if(keyword.trim().length > 0) {\r\n            history.push(`${category[props.category]}/search/${keyword}`)\r\n         }\r\n      },\r\n      [props.category, keyword, history],\r\n   )\r\n\r\n   useEffect(() => {\r\n      const enterEvent = (e) => {\r\n         e.preventDefault()\r\n         if(e.keyCode === 13) {\r\n            goToSearch()\r\n         }\r\n      }\r\n      document.addEventListener('keyup', enterEvent)\r\n      return () => {\r\n         document.removeEventListener('keyup', enterEvent)\r\n      }\r\n   }, [keyword, goToSearch])\r\n   return (\r\n      <div className=\"movie-search\">\r\n         <Input\r\n            type='text'\r\n            placeholder='Enter keyword'\r\n            value={keyword}\r\n            onChange={(e) => setKeyword(e.target.value)}\r\n         />\r\n         <Button className='small' onClick={goToSearch}>Search</Button>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default MovieGrid","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useParams } from 'react-router-dom'\r\nimport PageHeader from '../components/Page-header/PageHeader'\r\nimport { category as cate } from '../api/tmdbApi'\r\nimport MovieGrid from '../components/Movie-grid/MovieGrid'\r\nconst Catalog = props => {\r\n   const { category } = useParams();\r\n   return (\r\n      <>\r\n         <PageHeader>\r\n            {category === cate.movie ? 'Movies' : 'TV Series'}\r\n         </PageHeader>\r\n         <div className=\"container\">\r\n            <div className=\"section mb-3\">\r\n               <MovieGrid category={category} />\r\n            </div>\r\n         </div>\r\n      </>\r\n   )\r\n}\r\n\r\nCatalog.propTypes = {}\r\n\r\nexport default Catalog","import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useParams } from 'react-router-dom'\r\nimport tmdbApi from '../../api/tmdbApi'\r\nimport apiConfig from '../../api/apiConfig'\r\nconst CastList = props => {\r\n   const { category } = useParams();\r\n   const [cats, setCats] = useState([]);\r\n\r\n   useEffect(() => {\r\n      const getCredits = async () => {\r\n         const response = await tmdbApi.credits(category, props.id);\r\n         setCats(response.data.cast.slice(0, 5));\r\n      }\r\n      getCredits()\r\n   }, [category, props.id])\r\n   return (\r\n      <div className='casts'>\r\n         {\r\n            cats.map((item, index) => (\r\n               <div key={index} className=\"casts__item\">\r\n                  <div className=\"casts__item__img\" \r\n                  style={{backgroundImage: `url(${apiConfig.w500Image(item.profile_path)})`}}></div>\r\n                  <p className='casts__item__name'>{item.name}</p>\r\n               </div>\r\n            ))\r\n         }\r\n      </div>\r\n   )\r\n}\r\n\r\nCastList.propTypes = {}\r\n\r\nexport default CastList","import React, { useState, useEffect, useRef } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport tmdbApi from '../../api/tmdbApi'\r\nconst VideoList = (props) => {\r\n   const { category } = useParams();\r\n   const [videos, setVideos] = useState([]);\r\n   useEffect(() => {\r\n      const getVideos = async () => {\r\n         const response = await tmdbApi.getVideos(category, props.id)\r\n         console.log(response.data);\r\n         setVideos(response.data.results);\r\n      }\r\n      getVideos();\r\n   }, [category, props.id])\r\n   return (\r\n      <>\r\n         {\r\n            videos.map((item, index) => (\r\n               <Video key={index} item={item} />\r\n            ))\r\n         }\r\n      </>\r\n   )\r\n}\r\n\r\nconst Video = props => {\r\n   const { item } = props;\r\n   const iframeRef = useRef(null);\r\n   useEffect(() => {\r\n      const height = iframeRef.current.offsetWidth * 9 / 16 + 'px';\r\n      iframeRef.current.setAttribute('height', height);\r\n   }, [])\r\n   return (\r\n      <div className=\"video\">\r\n         <div className=\"video__title\">\r\n            <h2>{item.title || item.name}</h2>\r\n         </div>\r\n         <iframe\r\n            src={`http://www.youtube.com/embed/${item.key}`}\r\n            ref={iframeRef}\r\n            width=\"100%\"\r\n            title='video'\r\n            >\r\n            </iframe>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default VideoList","import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useParams } from 'react-router-dom'\r\nimport tmdbApi, { category, movieType, tvType } from '../../api/tmdbApi'\r\nimport apiConfig from '../../api/apiConfig'\r\nimport './Detail.scss'\r\nimport CastList from './CastList'\r\nimport VideoList from './VideoList'\r\nimport MovieList from '../../components/Movie-list/MovieList'\r\nconst Detail = props => {\r\n   const { category, id } = useParams();\r\n   const [item, setItem] = useState({});\r\n\r\n   useEffect(async () => {\r\n      const getDetail = await tmdbApi.detail(category, id, { params: {} });\r\n      setItem(getDetail.data);\r\n      console.log(getDetail.data);\r\n      window.scrollTo(0, 0);\r\n   }, [category, id])\r\n   return (\r\n      <>\r\n         {\r\n            item &&\r\n            (\r\n               <>\r\n                  <div className=\"banner\" style={{\r\n                     backgroundImage:\r\n                        `url(${apiConfig.originalImage(item.backdrop_path || item.poster_path)})`\r\n                  }}\r\n                  ></div>\r\n                  <div className=\"movie-content container mb-3\">\r\n                     <div className=\"movie-content__poster\">\r\n\r\n                        <div className=\"movie-content__poster__img\" style={{\r\n                           backgroundImage:\r\n                              `url(${apiConfig.originalImage(item.poster_path || item.backdrop_path)})`\r\n                        }}></div>\r\n                     </div>\r\n                     <div className=\"movie-content__info\">\r\n                        <h1 className=\"title\">\r\n                           {item.title || item.name}\r\n                        </h1>\r\n                        <div className=\"genres\">\r\n                           {\r\n                              item.genres && item.genres.slice(0, 5).map(genre => (\r\n                                 <span className='genres__item' key={genre.id}>{genre.name}</span>\r\n                              ))\r\n                           }\r\n                        </div>\r\n                        <p className=\"overview\">{item.overview}</p>\r\n                        <div className=\"cast\">\r\n                           <div className=\"section__header\">\r\n                              <h2>Cats</h2>\r\n                           </div>\r\n                           <CastList id={item.id} />\r\n                        </div>\r\n                     </div>\r\n                  </div>\r\n                  <div className=\"container\">\r\n                     <div className=\"section mb-3\">\r\n                           <VideoList id={item.id} />\r\n                     </div>\r\n                     <div className=\"section mb-3\">\r\n                        <div className=\"section__header mb-2\">\r\n                           <h2>Similar</h2>\r\n                        </div>\r\n                        <MovieList category={category} type='similar' id={id}/>\r\n                     </div>\r\n                  </div>\r\n               </>\r\n            )\r\n         }\r\n      </>\r\n   )\r\n}\r\n\r\nDetail.propTypes = {}\r\n\r\nexport default Detail","import { Switch, Route } from \"react-router-dom\";\r\nimport Home from '../pages/Home';\r\nimport Catalog from '../pages/Catalog';\r\nimport Detail from \"../pages/Detail/Detail\";\r\nconst Routes = () => (\r\n   <Switch>\r\n      <Route path=\"/:category/search/:keyword\" component={Catalog} />\r\n      <Route path=\"/:category/:id\" component={Detail} />\r\n      <Route path=\"/:category\" component={Catalog} />\r\n      <Route exact path=\"/\" component={Home} />\r\n   </Switch>\r\n)\r\n\r\nexport default Routes;","import 'swiper/swiper.min.css';\r\nimport './assets/boxicons-2.0.7/css/boxicons.min.css';\r\nimport './App.scss';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport Header from './components/Header/Header';\r\nimport Footer from './components/Footer/Footer';\r\nimport Routes from './Config/Routes';\r\nfunction App() {\r\n    return (\r\n        <BrowserRouter>\r\n            <Route render={props => (\r\n                <>\r\n                    <Header {...props} />\r\n                    <Routes />\r\n                    <Footer />\r\n                </>\r\n            )} />\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}